#!/usr/bin/python

import pickle
import re


def convertVariation(raw_text, variation, alternate_string):
    variation_info = re.findall('^([A-Za-z])(\d+)([A-Za-z])$', variation)

    if variation_info:
        original_amino, position, final_amino = variation_info[0]

        variation_list = []
        for o_amino in amino_acid_dict[original_amino]:
            for f_amino in amino_acid_dict[final_amino]:
                variation_list.append(o_amino + position + f_amino)

        variation = '(%s)' % '|'.join(variation_list)

    else:
        variation = re.escape(variation)

    return re.sub(variation, alternate_string, raw_text)


# load reference data

amino_acid_dict = pickle.load(open('./.amino_acid_dict.pkl', 'r'))
answer_dict = pickle.load(open('./.answer_dict.pkl', 'r'))
gene_alias_dict = pickle.load(open('./.gene_alias.regex.pkl', 'r'))

# replace aliases with target text in raw text

for field in ['test', 'train']:
    variants_file = open('./variants/%s' % field, 'r')
    parsed_text_file = open('../res/%s/%s.text.alias' % (field, field), 'w')

    for text in open('./text/preprocessed/%s' % field, 'r'):
        variant = variants_file.readline().rstrip('\n')

        if not re.match('ID', text):
            gene, variation = variant.split(',')[1:3]

            if gene in gene_alias_dict:
                text = re.sub(gene_alias_dict[gene], '$_TARGET_GENE_$', text)

            text = convertVariation(text, variation, '$_TARGET_VARIATION_$')

            if gene in answer_dict:
                for variation in answer_dict[gene]:
                    answer = answer_dict[gene][variation]
                    text = convertVariation(text, variation, answer)

        parsed_text_file.write(text)

    variants_file.close()
    parsed_text_file.close()
